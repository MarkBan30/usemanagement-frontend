{"ast":null,"code":"var _jsxFileName = \"/Users/markban/ztgg-uidemo/uidemo/src/components/Modals/EditUserModal.jsx\";\nimport React from \"react\";\nimport { Button, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nexport default class EditUserModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRandomInt = max => {\n      return Math.floor(Math.random() * max);\n    };\n\n    this.handleValidSubmit = (event, values) => {\n      const {\n        payload\n      } = values;\n      if (typeof this.props.editUser === \"function\") this.props.editUser(payload);\n      if (typeof this.props.close === \"function\") this.props.close();\n    };\n\n    this.state = {\n      isProcessing: false\n    };\n  }\n\n  render() {\n    let button;\n\n    if (this.state.isProcessing) {\n      button = /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        className: \"btn-round\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }\n      }, \"Processing\");\n    } else {\n      button = /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        className: \"btn-round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }\n      }, this.props.btnText);\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: this.props.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AvForm, {\n      onValidSubmit: this.handleValidSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Create New User\"), /*#__PURE__*/React.createElement(ModalBody, {\n      style: {\n        boxShadow: \"unset\"\n      },\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"payload.id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(AvField, {\n      name: \"payload.id\",\n      type: \"text\",\n      value: this.props.user.id,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"payload.name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(AvField, {\n      name: \"payload.name\",\n      type: \"text\",\n      value: this.props.user.name,\n      validate: {\n        required: {\n          value: true,\n          errorMessage: 'Please enter a name'\n        },\n        pattern: {\n          value: '^[A-Za-z]+$',\n          errorMessage: 'Your name must be composed only with letter'\n        },\n        minLength: {\n          value: 4,\n          errorMessage: 'Your name must be between 6 and 16 characters'\n        },\n        maxLength: {\n          value: 16,\n          errorMessage: 'Your name must be between 6 and 16 characters'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"payload.age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(AvField, {\n      name: \"payload.age\",\n      type: \"text\",\n      value: this.props.user.age,\n      validate: {\n        required: {\n          value: true,\n          errorMessage: 'Please enter a name'\n        },\n        pattern: {\n          value: '^[1-9][0-9]$',\n          errorMessage: 'Your age must be composed only with number'\n        },\n        minLength: {\n          value: 1,\n          errorMessage: 'Your age must be between 1 and 2 numbers'\n        },\n        maxLength: {\n          value: 2,\n          errorMessage: 'Your age must be between 1 and 2 numbers'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, button, ' ', !this.state.isProcessing && /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      className: \"btn-round\",\n      onClick: this.props.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"names":["React","Button","Label","Modal","ModalBody","ModalFooter","ModalHeader","AvForm","AvField","EditUserModal","Component","constructor","props","getRandomInt","max","Math","floor","random","handleValidSubmit","event","values","payload","editUser","close","state","isProcessing","render","button","btnText","isOpen","boxShadow","user","id","name","required","value","errorMessage","pattern","minLength","maxLength","age"],"sources":["/Users/markban/ztgg-uidemo/uidemo/src/components/Modals/EditUserModal.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\nexport default class EditUserModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isProcessing: false\n        }\n    }\n\n    getRandomInt = (max) => {\n        return Math.floor(Math.random() * max);\n    }\n\n    handleValidSubmit = (event, values) => {\n        const { payload } = values\n        if (typeof this.props.editUser === \"function\")\n            this.props.editUser(payload)\n\n        if (typeof this.props.close === \"function\")\n            this.props.close();\n    }\n\n    render() {\n        let button\n        if (this.state.isProcessing) {\n            button = <Button color=\"success\" className=\"btn-round\" disabled>Processing</Button>;\n        } else {\n            button = <Button color=\"success\" className=\"btn-round\">{this.props.btnText}</Button>\n        }\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.close}>\n                <AvForm onValidSubmit={this.handleValidSubmit}>\n                    <ModalHeader toggle={this.props.close}>\n                        Create New User\n                    </ModalHeader>\n                    <ModalBody style={{ boxShadow: \"unset\" }} className=\"card\">\n                        <Label for=\"payload.id\">Id</Label>\n                        <AvField\n                            name=\"payload.id\"\n                            type=\"text\"\n                            value={this.props.user.id}\n                            disabled\n                        />\n                        <Label for=\"payload.name\">Name</Label>\n                        <AvField\n                            name=\"payload.name\"\n                            type=\"text\"\n                            value={this.props.user.name}\n                            validate={{\n                                required: { value: true, errorMessage: 'Please enter a name' },\n                                pattern: { value: '^[A-Za-z]+$', errorMessage: 'Your name must be composed only with letter' },\n                                minLength: { value: 4, errorMessage: 'Your name must be between 6 and 16 characters' },\n                                maxLength: { value: 16, errorMessage: 'Your name must be between 6 and 16 characters' }\n                            }}\n                        />\n                        <Label for=\"payload.age\">Age</Label>\n                        <AvField\n                            name=\"payload.age\"\n                            type=\"text\"\n                            value={this.props.user.age}\n                            validate={{\n                                required: { value: true, errorMessage: 'Please enter a name' },\n                                pattern: { value: '^[1-9][0-9]$', errorMessage: 'Your age must be composed only with number' },\n                                minLength: { value: 1, errorMessage: 'Your age must be between 1 and 2 numbers' },\n                                maxLength: { value: 2, errorMessage: 'Your age must be between 1 and 2 numbers' }\n                            }}\n                        />\n                    </ModalBody>\n                    <ModalFooter>\n                        {button}{' '}\n                        {!this.state.isProcessing &&\n                            <Button color=\"danger\" className=\"btn-round\" onClick={this.props.close}>Cancel</Button>\n                        }\n                    </ModalFooter>\n                </AvForm>\n            </Modal>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}